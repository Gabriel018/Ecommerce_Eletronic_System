@using EletronicSystem.Domain.Entities
@using Microsoft.AspNetCore.Identity
@inject SignInManager<Usuario> SignInManager
@inject UserManager<Usuario> UserManager
<ul class="navbar-nav">

   
    @if (User.IsInRole("Admin"))
    {
        var clienteNome = User?.Identity?.Name?.ToString();

        <li class="nav-item">
            <a class="nav-link text-light" asp-area="" asp-controller="Usuario" asp-action="Index">usuarios</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-light" asp-area="" asp-controller="Produto" asp-action="Index">produtos</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-light" asp-area="" asp-controller="Carrinho" asp-route-clienteNome="@clienteNome" asp-action="VisualizarCarrinho">carrinho</a>
        </li>
    }

    @if (SignInManager.IsSignedIn(User!))
    {
        <li class="nav-item">
            <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@User?.Identity?.Name!</a>
        </li>
        <li class="nav-item text-light">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-light">logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-light" asp-controller="Usuario" asp-action="Create">registrar-se</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Login">login</a>
        </li>
    }
</ul>
